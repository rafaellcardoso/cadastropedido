unit Teste.Cliente.Controller;

interface

uses
  System.Generics.Collections,
  Teste.Default.Controller,
  Teste.Cliente.DAO,
  Teste.Cliente.Entity;

type
  TClienteController = class(TDefaultController)
  private
    FClienteDAO: TClienteDAO;
  public
    constructor Create;
    destructor Destroy; override;

    procedure Insert(Produto: TCliente); overload;
    procedure Update(Produto: TCliente); overload;
    procedure Delete(AId: Integer);

    function FindAll(const ASql: String; const AParam: Boolean = False): TObjectList<TCliente>;
    function FindById(const AId: Integer): TCliente;
  end;


implementation

{ TClienteController }

constructor TClienteController.Create;
begin
  FClienteDAO := TClienteDAO.Create;
  Self.DefaultDAO := FClienteDAO;
end;

procedure TClienteController.Delete(AId: Integer);
begin
  FProdutoDAO.Delete(AId);
end;

destructor TClienteController.Destroy;
begin
  FProdutoDAO.Free;
  inherited;
end;

function TClienteController.FindAll(const ASql: String;
  const AParam: Boolean): TObjectList<TCliente>;
begin
  Result := FProdutoDAO.FindAll(ASql, AParam);
end;

function TClienteController.FindById(const AId: Integer): TCliente;
begin
  Result := FProdutoDAO.FindById(AId);
end;

procedure TClienteController.Insert(Produto: TCliente);
begin
  FProdutoDAO.Insert(Produto);
end;

procedure TClienteController.Update(Produto: TCliente);
begin

end;

end.
